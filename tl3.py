                                                                                                                                                                                                                                                                         tl3.py                                                                                                                                                                                                                                                                                    
import asyncio
import subprocess
import sys
from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.filters import Command
from data import get_data, count_free_numbers  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ data.py

TOKEN = ""

# –°–æ–∑–¥–∞—ë–º –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
bot = Bot(token=TOKEN)
dp = Dispatcher()

# –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="1Ô∏è‚É£ 1")],  # –ü–µ—Ä–≤–∞—è –∫–Ω–æ–ø–∫–∞ (—Ä–∞–±–æ—Ç–∞–µ—Ç)
        [KeyboardButton(text="2Ô∏è‚É£ 2")],  # –í—Ç–æ—Ä–∞—è –∫–Ω–æ–ø–∫–∞ (–∑–∞–ø—É—Å–∫ data1.py)
    ],
    resize_keyboard=True
)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
async def start_command(message: types.Message):
    await message.answer("‚¨áÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "1Ô∏è‚É£ 1" (–æ—Å–Ω–æ–≤–Ω–æ–π —Å–∫—Ä–∏–ø—Ç)
async def button_1_response(message: types.Message):
    data = get_data()  # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    country_counts = count_free_numbers(data)  # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–æ–º–µ—Ä–æ–≤
    result_message = "\n".join([f"{country}: {count}" for country, count in country_counts.items()])  # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    await message.answer(f"üìä:\n{result_message}")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "2Ô∏è‚É£ 2" (–∑–∞–ø—É—Å–∫ data1.py)
async def button_2_response(message: types.Message):
    # –ó–∞–ø—É—Å–∫–∞–µ–º data1.py —á–µ—Ä–µ–∑ sys.executable, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø—Ä–æ–±–ª–µ–º —Å –ø—É—Ç—è–º–∏
    result = subprocess.run([sys.executable, "data1.py"], capture_output=True, text=True)
    output = result.stdout.strip()

    # –ï—Å–ª–∏ –µ—Å—Ç—å –≤—ã–≤–æ–¥ –æ—Ç —Å–∫—Ä–∏–ø—Ç–∞, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ
    if output:
        await message.answer(f"üìä –î–∞–Ω–Ω—ã–µ –∏–∑ data1.py:\n{output}")

# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
dp.message(Command("start"))(start_command)
dp.message(lambda message: message.text == "1Ô∏è‚É£ 1")(button_1_response)
dp.message(lambda message: message.text == "2Ô∏è‚É£ 2")(button_2_response)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    await dp.start_polling(bot)

if __name__ == '__main__':
    asyncio.run(main())
